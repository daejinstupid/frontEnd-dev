name: CI/CD Pipeline for Frontend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 3. 원격 서버에서 package.json 파일을 가져오기
      - name: Copy package.json from EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts
          # 원격 서버의 package.json 파일을 로컬 디렉토리로 복사
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@"$HOST":/home/ec2-user/frontEnd-dev/package.json ./package.json

      # 4. 의존성 설치
      - name: Install dependencies
        run: npm install --prefix .

      # 5. 빌드 (CI='' 추가하여 ESLint 경고를 무시)
      - name: Build
        run: |
          CI='' npm run build --prefix .

      # 6. 빌드 결과 배포
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./build/* ec2-user@"$HOST":/usr/share/nginx/html/
